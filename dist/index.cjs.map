{"version":3,"sources":["../src/index.ts","../src/utils/errors.ts","../src/utils/logger.ts","../src/utils/storage.ts"],"sourcesContent":["export * from './utils/errors';\nexport * from './utils/logger';\nexport * from './utils/storage';\n\n","export enum ExitCode {\n  Success = 0,\n  NotLoggedIn = 10,\n  MissingGithubToken = 11,\n  NotAGitRepo = 12,\n  GitFailed = 13,\n  GithubApiError = 14,\n  ConfigMissing = 15,\n  InvalidArgs = 16,\n  GoogleSsoFailed = 17,\n  SessionExpired = 18,\n  NetworkError = 19,\n  Unauthorized = 20,\n}\n\nexport class CliError extends Error {\n  code: ExitCode;\n  constructor(message: string, code: ExitCode) {\n    super(message);\n    this.code = code;\n  }\n}\n\n","/* Simple structured logger with levels and secret masking */\n\ntype LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nconst levelToNum: Record<LogLevel, number> = {\n  debug: 10,\n  info: 20,\n  warn: 30,\n  error: 40,\n};\n\nfunction maskSecrets(input: string): string {\n  if (!input) return input;\n  // Mask tokens/secrets-like substrings (40+ chars alnum or begins with ghp_)\n  return input\n    .replace(/gh[pous]_[A-Za-z0-9_]{10,}/g, '***')\n    .replace(/[A-Za-z0-9-_]{32,}/g, '***');\n}\n\nexport class Logger {\n  private level: LogLevel;\n\n  constructor(level: LogLevel = (process.env.LOG_LEVEL as LogLevel) || 'info') {\n    this.level = level;\n  }\n\n  setLevel(level: LogLevel) {\n    this.level = level;\n  }\n\n  private log(level: LogLevel, message: string, meta?: unknown) {\n    if (levelToNum[level] < levelToNum[this.level]) return;\n    const ts = new Date().toISOString();\n    const base = `[${ts}] [${level.toUpperCase()}]`;\n    const msg = maskSecrets(message);\n    if (meta !== undefined) {\n      const safeMeta = maskSecrets(JSON.stringify(meta, null, 2));\n      // eslint-disable-next-line no-console\n      console.log(`${base} ${msg}\\n${safeMeta}`);\n    } else {\n      // eslint-disable-next-line no-console\n      console.log(`${base} ${msg}`);\n    }\n  }\n\n  debug(msg: string, meta?: unknown) { this.log('debug', msg, meta); }\n  info(msg: string, meta?: unknown) { this.log('info', msg, meta); }\n  warn(msg: string, meta?: unknown) { this.log('warn', msg, meta); }\n  error(msg: string, meta?: unknown) { this.log('error', msg, meta); }\n}\n\nexport const logger = new Logger();\n\n","import os from 'node:os';\nimport path from 'node:path';\nimport fs from 'node:fs';\n\ntype Scope = 'project' | 'profile';\n\nconst APP_DIR_NAME = 'agent-commits';\n\nfunction ensureDir(dir: string) {\n  if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });\n}\n\nfunction getProjectRoot(): string | null {\n  // Detect git repo root deterministically by walking up until .git or root\n  let current = process.cwd();\n  // Hard limit to avoid infinite loops\n  for (let i = 0; i < 100; i++) {\n    const gitDir = path.join(current, '.git');\n    if (fs.existsSync(gitDir)) return current;\n    const parent = path.dirname(current);\n    if (parent === current) break;\n    current = parent;\n  }\n  return null;\n}\n\nfunction baseDir(scope: Scope): string {\n  if (scope === 'project') {\n    const root = getProjectRoot();\n    return root ? path.join(root, `.${APP_DIR_NAME}`) : path.join(process.cwd(), `.${APP_DIR_NAME}`);\n  }\n  const home = os.homedir();\n  return path.join(home, `.${APP_DIR_NAME}`);\n}\n\nexport function readJson<T>(file: string, scope: Scope): T | null {\n  const dir = baseDir(scope);\n  const full = path.join(dir, file);\n  try {\n    if (!fs.existsSync(full)) return null;\n    const raw = fs.readFileSync(full, 'utf8');\n    return JSON.parse(raw) as T;\n  } catch {\n    return null;\n  }\n}\n\nexport function writeJson<T>(file: string, scope: Scope, data: T): void {\n  const dir = baseDir(scope);\n  ensureDir(dir);\n  const full = path.join(dir, file);\n  fs.writeFileSync(full, JSON.stringify(data, null, 2), { encoding: 'utf8' });\n}\n\nexport interface AppConfig {\n  branchPrefix?: string;\n  commitPrefix?: string;\n}\n\nexport interface SessionState {\n  google: {\n    accessToken: string;\n    refreshToken?: string;\n    expiresAt: number; // epoch ms\n    email?: string;\n    sub?: string;\n  } | null;\n  github: {\n    token?: string; // not logged, masked\n    username?: string;\n  };\n}\n\nconst CONFIG_FILE = 'config.json';\nconst STATE_FILE = 'state.json';\n\nexport const defaultConfig: Required<AppConfig> = {\n  branchPrefix: 'agent',\n  commitPrefix: 'agent',\n};\n\nexport function getConfig(scope: Scope = 'project'): Required<AppConfig> {\n  const cfg = readJson<AppConfig>(CONFIG_FILE, scope) || {};\n  return {\n    branchPrefix: cfg.branchPrefix || defaultConfig.branchPrefix,\n    commitPrefix: cfg.commitPrefix || defaultConfig.commitPrefix,\n  };\n}\n\nexport function setConfig(scope: Scope, cfg: Partial<AppConfig>) {\n  const prev = readJson<AppConfig>(CONFIG_FILE, scope) || {};\n  writeJson(CONFIG_FILE, scope, { ...prev, ...cfg });\n}\n\nexport function getState(): SessionState {\n  const st = readJson<SessionState>(STATE_FILE, 'profile');\n  return (\n    st || {\n      google: null,\n      github: {},\n    }\n  );\n}\n\nexport function setState(state: SessionState): void {\n  writeJson(STATE_FILE, 'profile', state);\n}\n\n"],"mappings":"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","names":["ExitCode","fs","path","os"]}